=================================================================================================================
MYSQL>CALL BLOCK_SUM(5,10,@SUM);
MYSQL>SELECT @SUM;

DELIMITER $$
DROP PROCEDURE IF EXISTS BLOCK_SUM$$
CREATE PROCEDURE BLOCK_SUM(IN V_VARIABLEONE INTEGER(10),IN V_VAIABLETWO INTEGER(10),OUT V_MSG VARCHAR(100))

BEGIN
DECLARE EXIT HANDLER FOR SQLWARNING
    SET V_MSG=CONCAT("ADDITION OF THE INPUTED NUMBER IS ",(V_VARIABLEONE+V_VAIABLETWO));
END$$
DELIMITER ;
=================================================================================================================
/* IF ELSE EXAMPLE */

MYSQL>CALL BLOCK_IF_ELSE(5,@RESULT);
MYSQL>SELECT @RESULT;

DELIMITER $$
DROP PROCEDURE IF EXISTS BLOCK_IF_ELSE$$
CREATE PROCEDURE BLOCK_IF_ELSE(IN V_NUMBER INTEGER(10),OUT V_MSG VARCHAR(100))
BEGIN
DECLARE EXIT HANDLER FOR SQLWARNING
      IF (V_NUMBER BETWEEN 10 AND 19) THEN
         SET V_MSG ="IN RANGE OF 10 T0 20 ";
			ELSEIF (V_NUMBER BETWEEN 20 AND 29)  THEN
			   SET V_MSG ="IN RANGE OF 20 T0 30 ";
			ELSEIF (V_NUMBER BETWEEN 30 AND 39)  THEN
		      SET V_MSG ="IN RANGE OF 30 T0 40 ";
			ELSE
			  SET V_MSG ="DATA NOT IN RANGE";
			END IF;
END$$
DELIMITER ;

=================================================================================================================
/* EVEN ODD NUMBER EXAMPLE */
MYSQL>CALL BLOCK_EVENODD(15,@RESULT);
MYSQL>SELECT @RESULT;

DELIMITER $$
DROP PROCEDURE IF EXISTS BLOCK_EVENODD$$
CREATE PROCEDURE BLOCK_EVENODD(IN V_VARIABLE INTEGER(10),OUT V_MSG VARCHAR(100))
BEGIN
DECLARE EXIT HANDLER FOR SQLWARNING
     IF MOD(V_VARIABLE,2)=0 THEN
         SET V_MSG=CONCAT(V_VARIABLE,' ','Is Even Number!');
      ELSE
          SET V_MSG=CONCAT(V_VARIABLE,' ','Is Odd Number!');
      END IF;           
END$$
DELIMITER ;

=================================================================================================================
/* SWITCH CASE STATEMENT */
MYSQL>CALL BLOCK_SWITCH(20,@MSG);
MYSQL>SELECT @MSG;
	
DELIMITER $$
DROP PROCEDURE IF EXISTS BLOCK_SWITCH$$
CREATE PROCEDURE BLOCK_SWITCH(IN V_NUMBER INTEGER(10),OUT V_MSG VARCHAR(100))
BEGIN
DECLARE EXIT HANDLER FOR SQLWARNING
         CASE V_NUMBER
	        WHEN 10 THEN
			        SET V_MSG=" TEN";
            WHEN 20 THEN
			        SET V_MSG=" TWENTY";
			WHEN 30 THEN
					SET V_MSG=" THRITY";
            WHEN 40 THEN
			        SET V_MSG=" FOURTY";
            WHEN 50 THEN
			        SET V_MSG=" FIFTY";
		    ELSE
					SET V_MSG=" NOT MATCHED";
			END CASE;
      SET V_MSG=CONCAT("RESULT OF THE CASE STATEMENT IS ",V_MSG);
	   SELECT V_NUMBER AS Digit, V_MSG AS RESULT_MSG;
END$$
DELIMITER ;


------------------------------------------------------------------
/* SWITCH CASE STATEMENT */
MYSQL>CALL BLOCK_SWITCH(20,@MSG);
MYSQL>SELECT @MSG;

DELIMITER $$
DROP PROCEDURE IF EXISTS BLOCK_SWITCH$$
CREATE PROCEDURE BLOCK_SWITCH(IN V_NUMBER INTEGER(10),OUT V_MSG VARCHAR(100))
BEGIN
DECLARE CONTINUE HANDLER FOR SQLWARNING	
            CASE
	           WHEN V_NUMBER BETWEEN 10 AND 19 THEN
					SET V_MSG="IN RANGE OF 10 T0 20 ";
			   WHEN V_NUMBER BETWEEN 20 AND 29  THEN
					SET V_MSG="IN RANGE OF 20 T0 30 ";
			   WHEN V_NUMBER BETWEEN 30 AND 39  THEN
					SET V_MSG="IN RANGE OF 30 T0 40 ";
		       ELSE
					SET V_MSG="NOT MATCHED";
			END CASE;
	   SET V_MSG=CONCAT("RESULT OF THE CASE STATEMENT IS ",V_MSG);
	   SELECT V_NUMBER AS Digit, V_MSG AS RESULT_MSG;
END$$
DELIMITER ;
=================================================================================================================
/* BASIC LOOP */
MYSQL>CALL BLOCK_LOOP(20,@MSG);
MYSQL>SELECT @MSG;

DELIMITER $$
DROP PROCEDURE IF EXISTS BLOCK_LOOP$$
CREATE PROCEDURE BLOCK_LOOP(IN V_NUMBER INTEGER(10),OUT V_MSG VARCHAR(100))
BEGIN
      DECLARE CONTINUE HANDLER FOR SQLWARNING
      DECLARE V_INDEX INTEGER DEFAULT 0;
      SET V_MSG=" ";

      LOOP_LABEL:LOOP
	      SET V_INDEX=V_INDEX+1;
		  IF V_INDEX < V_NUMBER THEN
         SET V_MSG=CONCAT(V_MSG,' ',V_INDEX);
		     ITERATE LOOP_LABEL;
		  ELSE
             LEAVE LOOP_LABEL;
		  END IF;
	  END LOOP LOOP_LABEL;

END$$
DELIMITER ;
=================================================================================================================
/* WHILE LOOP */
MYSQL>CALL BLOCK_WHILELOOP(20,@MSG);
MYSQL>SELECT @MSG;

DELIMITER $$
DROP PROCEDURE IF EXISTS BLOCK_WHILELOOP$$
CREATE PROCEDURE BLOCK_WHILELOOP(IN V_NUMBER INTEGER(10),OUT V_MSG VARCHAR(100))
BEGIN
      DECLARE V_INDEX INTEGER DEFAULT 0;
      SET V_MSG=" ";
	  
	   WHILE V_INDEX < V_NUMBER DO
	        SET V_MSG=CONCAT(V_MSG,' ',V_INDEX);
	        SET V_INDEX=V_INDEX+1;
	   END WHILE;      
END$$
DELIMITER ;
=================================================================================================================
/* UNTILL LOOP */
MYSQL>CALL BLOCK_UNTILLOOP(20,@MSG);
MYSQL>SELECT @MSG;

DELIMITER $$
DROP PROCEDURE IF EXISTS BLOCK_UNTILLOOP$$
CREATE PROCEDURE BLOCK_UNTILLOOP(IN V_NUMBER INTEGER(10),OUT V_MSG VARCHAR(100))
BEGIN
      DECLARE V_INDEX INTEGER DEFAULT 0;
      SET V_MSG=" ";	   
       REPEAT
	        SET V_MSG=CONCAT(V_MSG,' ',V_INDEX);
	        SET V_INDEX=V_INDEX+1;
	   UNTIL V_INDEX > V_NUMBER END REPEAT;	         	 
END$$
DELIMITER ;
=================================================================================================================
/* PRIME NUMBER EXAMPLE */
MYSQL>CALL BLOCK_PRIMENUMBER(20,@MSG);
MYSQL>SELECT @MSG;

DELIMITER $$
DROP PROCEDURE IF EXISTS BLOCK_PRIMENUMBER$$
CREATE PROCEDURE BLOCK_PRIMENUMBER(IN V_NUMBER INTEGER(10),OUT V_MSG VARCHAR(100))
BEGIN
      DECLARE V_INDEX INTEGER DEFAULT 0;
      DECLARE V_COUNT INTEGER DEFAULT 0;

		   WHILE V_INDEX <= V_NUMBER DO	
                  SET V_INDEX=V_INDEX+1;
				IF MOD(V_NUMBER,V_INDEX)=0 THEN
						SET V_COUNT =V_COUNT+1;
				END IF;
		  END WHILE;
		  
		  IF V_COUNT<=2 THEN
			 SET V_MSG=CONCAT(V_NUMBER,' ' ,'IS PRIME NUMBER');
          ELSE
			 SET V_MSG=CONCAT(V_NUMBER,' ',' IS NOT  PRIME NUMBER');
		  END IF;
END$$
DELIMITER ;
=================================================================================================================
/* FEBONASI SERIES EXAMPLE */
MYSQL>CALL BLOCK_FEBONASI(50,@MSG);
MYSQL>SELECT @MSG;

DELIMITER $$
DROP PROCEDURE IF EXISTS BLOCK_FEBONASI$$
CREATE PROCEDURE BLOCK_FEBONASI(IN V_NUMBER INTEGER(10),OUT V_MSG VARCHAR(65535))
BEGIN
    DECLARE RESULT DECIMAL DEFAULT 1;
	DECLARE previous BIGINT DEFAULT -1;
	DECLARE V_SUM DECIMAL DEFAULT 0;
	DECLARE V_INDEX BIGINT DEFAULT 1;
	SET V_MSG = ' ' ;
	WHILE  V_INDEX <= V_NUMBER DO
	       SET	V_SUM = RESULT + previous;
			   SET previous = RESULT;
			   SET RESULT = V_SUM;
		     SET V_INDEX=V_INDEX+1;
		SET V_MSG=CONCAT(V_SUM," " ,V_MSG);
	END WHILE;

END$$
DELIMITER ;
=================================================================================================================